[project]
name = "auto-wrench"
version = "0.1.0"
description = "Automated registration package for urban sensor endpoints into metadata catalogs"
authors = [
    {name = "Jeffrey Limnardy", email = "jeffreylimnardy@yahoo.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.12,<4.0"
dependencies = [
    "pydantic>=2.10.4,<3.0.0",
    "requests>=2.32.3,<3.0.0",
    "ckanapi>=4.8,<5.0",
    "python-dotenv>=1.0.1",
    "geojson>=3.2.0",
    "pyyaml>=6.0.0",
    "xxhash>=3.5.0",
]

[project.optional-dependencies]
teleclass = [
    "sentence-transformers>=3.3.1",
    "networkx>=3.4.2",
    "numpy>=2.2.1",
    "ollama>=0.4.5",
    "yake>=0.4.8",
    "rank_bm25>=0.2.2",
]
sensorthings = [
    "paho-mqtt>=2.1.0",
]

[dependency-groups]
test = [
    "pytest>=8.3.0",
    "pytest-mock",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.25.3",
]
lint = [
    "ruff<1.0.0,>=0.5.0",
    "codespell>=2.2.0,<3.0.0",
    "mypy>=1.15.0"
]
dev = [
    "sphinx>=8.2.1",
    "sphinx-autobuild>=2024.10.3",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.uv.sources]
wrench = { path = "./wrench", editable = true }

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "D",  # pydocstyle
]
ignore = [
    "D203",  # one-blank-line-before-class
    "D212",  # multi-line-summary-first-line
    "D100",  # missing docstring in public module
    "D101",  # missing docstring in public class
    "D104",  # missing docstring in public package
    "D102",  # missing docstring in public method
    "D107",  # Missing docstring in __init__ method
    "E501",  # line too long,
]

[tool.ruff.lint.pydocstyle]
convention = "google"  # Use Google-style docstrings

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]  # Disable docstring checks for tests

[tool.codespell]
skip = '.git,*.pdf,*.svg,*.yaml,*.ipynb,poetry.lock,*.min.js,*.css,*.json,_dist,build,*.pyc,.venv'
ignore-words-list = 'wrench'
check-filenames = true
check-hidden = true

[tool.pytest.ini_options]
addopts = "-v --cov=wrench --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py"]

[tool.coverage.run]
source = ["wrench"]

[tool.mypy]
disable_error_code = ["import-untyped"]
